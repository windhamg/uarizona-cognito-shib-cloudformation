---
  
    AWSTemplateFormatVersion: "2010-09-09"
    Description: "UArizona Shibboleth IdP Cognito User Pool"
    
    # Parameters
    # ----------
    #
    # These are the input parameters for this template. All of these parameters
    # must be supplied for this template to be deployed.
    Parameters:
    
      AppShortName:
        Type: String
        Description: "A short name for your application. Only letters, no spaces."
        Default: "myapp"
    
      LoginURLPrefix:
        Type: String
        Description: "A prefix for the cognito login page. Lowercase letters, numbers, and hyphens only."
        Default: "myapp"
        AllowedPattern: ^[a-z0-9](?:[a-z0-9\\-]{0,61}[a-z0-9])?$

      CallbackURLs:
        Type: List<String>
        Description: "Comma-separated list of fully-qualified OAuth callback URLs"
        Default: "http://localhost:4200/"
        AllowedPattern: '^https?://[a-z0-9.:\-/]+$'
      
      LogoutURLs:
        Type: List<String>
        Description: "Comma-separated list of fully-qualified OAuth logout URLs"
        Default: "http://localhost:4200/"
        AllowedPattern: '^https?://[a-z0-9.:\-/]+$'

      IdPMetadataUrl:
        Type: String
        Description: "URL to SAML IdP Metadata"
        Default: "https://shib-support.iam.arizona.edu/metadata/ua-incommon-metadata.xml"

      # #### Tags
      #
      # The following tags are applied to all resources created by this template.
      ServiceTag:
        Type: String
        Description: Exact name of the Service as defined in the service catalog.
      EnvironmentTag:
        Type: String
        Description: Used to distinguish between development, test, production,etc. environment types.
        AllowedValues: [dev, tst, prd, trn, stg, cfg, sup, rpt]
        Default: dev
      ContactNetidTag:
        Type: String
        Description: Used to identify the netid of the person most familiar with the usage of the resource.
      AccountNumberTag:
        Type: String
        Description: Identifies the financial system account number.
    
    
    # Metadata
    # --------
    #
    # Metadata is mostly for organizing and presenting Parameters in a better way
    # when using CloudFormation in the AWS Web UI.
    Metadata:
      AWS::CloudFormation::Interface:
        ParameterGroups:
        - Label:
            default: Project Settings
          Parameters:
          - AppShortName
          - LoginURLPrefix
        - Label:
            default: Tags
          Parameters:
          - ServiceTag
          - EnvironmentTag
          - ContactNetidTag
          - AccountNumberTag
    
        ParameterLabels:
          ServiceTag:
            default: "Service Name:"
          EnvironmentTag:
            default: 'Environment Type:'
          ContactNetidTag:
            default: 'Contact NetID:'
          AccountNumberTag:
            default: 'Financial Account Number:'
    
    
    # Resources
    # ---------
    #
    Resources:
    
      CognitoUserPool:
        Type: "AWS::Cognito::UserPool"
        Properties:
          UserPoolName: !Sub "${AppShortName}-userpool"
          AdminCreateUserConfig: 
            AllowAdminCreateUserOnly: true
          Schema:
            - Name: email
              Mutable: True
              AttributeDataType: String
            - Name: family_name
              Mutable: True
              AttributeDataType: String
            - Name: given_name
              Mutable: True
              AttributeDataType: String
            - Name: display_name
              Mutable: True
              AttributeDataType: String
            - Name: name
              Mutable: True
              AttributeDataType: String
            - Name: netid
              Mutable: True
              AttributeDataType: String
            - Name: affiliations
              Mutable: True
              AttributeDataType: String
            - Name: primary_affiliation
              Mutable: True
              AttributeDataType: String
            - Name: ismemberof
              Mutable: True
              AttributeDataType: String
            - Name: uaid
              Mutable: True
              AttributeDataType: String
            - Name: emplid
              Mutable: True
              AttributeDataType: String
          UserPoolTags:
            service: !Ref ServiceTag
            environment: !Ref EnvironmentTag
            contactnetid: !Ref ContactNetidTag
            accountnumber: !Ref AccountNumberTag

      CognitoUserPoolIdentityProvider: 
        Type: AWS::Cognito::UserPoolIdentityProvider
        Properties:
          UserPoolId: !Ref CognitoUserPool
          ProviderName: "UAIdP"
          ProviderDetails:
            MetadataURL: !Ref IdPMetadataUrl
          ProviderType: "SAML"
          AttributeMapping:
            "email": "urn:oid:0.9.2342.19200300.100.1.3"
            "name": "urn:oid:2.5.4.3"
            "given_name": "urn:oid:2.5.4.42"
            "family_name": "urn:oid:2.5.4.4"
            "custom:affiliations": "urn:oid:1.3.6.1.4.1.5923.1.1.1.1"
            "custom:primary_affiliation": "urn:oid:1.3.6.1.4.1.5923.1.1.1.5"
            "custom:netid": "urn:oid:0.9.2342.19200300.100.1.1"
            "custom:ismemberof": "urn:oid:1.3.6.1.4.1.5923.1.5.1.1"
            "custom:uaid": "urn:oid:1.3.6.1.4.1.5643.10.0.1"
            "emplid": "urn:oid:1.3.6.1.4.1.5643.10.0.61"
            "custom:display_name": "urn:oid:2.16.840.1.113730.3.1.241"

      CognitoUserPoolDomain:
        Type: AWS::Cognito::UserPoolDomain
        Properties: 
          Domain: !Ref LoginURLPrefix
          UserPoolId: !Ref CognitoUserPool

      CognitoAppClient:
        Type: "AWS::Cognito::UserPoolClient"
        DependsOn: CognitoUserPoolIdentityProvider
        Properties:
          ClientName: !Sub "${AppShortName}-appclient"
          UserPoolId: !Ref CognitoUserPool
          GenerateSecret: false
          AllowedOAuthFlows:
            - code
          AllowedOAuthScopes:
            - phone
            - email
            - openid
            - profile
            - aws.cognito.signin.user.admin
          AllowedOAuthFlowsUserPoolClient: true
          ExplicitAuthFlows:
            - ALLOW_CUSTOM_AUTH
            - ALLOW_USER_SRP_AUTH
            - ALLOW_REFRESH_TOKEN_AUTH
          CallbackURLs: !Ref CallbackURLs
          LogoutURLs: !Ref LogoutURLs
          RefreshTokenValidity: 1
          SupportedIdentityProviders:
            - "UAIdP"
          PreventUserExistenceErrors: 'LEGACY'
          ReadAttributes:
            - "email"
            - "name"
            - "given_name"
            - "family_name"
            - "custom:affiliations"
            - "custom:primary_affiliation"
            - "custom:netid"
            - "custom:ismemberof"
            - "custom:uaid"
            - "custom:emplid"
            - "custom:display_name"
          WriteAttributes:
            - "email"
            - "name"
            - "given_name"
            - "family_name"
            - "custom:affiliations"
            - "custom:primary_affiliation"
            - "custom:netid"
            - "custom:ismemberof"
            - "custom:uaid"
            - "custom:emplid"
            - "custom:display_name"

    Outputs:
      UserPool:
        Description: Cognito User Pool
        Value: !Ref CognitoUserPool
        Export:
          Name: !Sub "${AWS::StackName}-userpool"
    
      Domain:
        Description: Cognito Domain URL
        Value: !Sub "https://${LoginURLPrefix}.auth.${AWS::Region}.amazoncognito.com"
    
      AppClientID:
        Description: Cognito App Client ID
        Value: !Ref CognitoAppClient
      
      SAMLMetaData:
        Description: SAML SP Metadata for Cognito User Pool (add this to SP metadata on IdP)
        Value: !Sub |
          <md:EntityDescriptor xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata" entityID="urn:amazon:cognito:sp:${CognitoUserPool}">
            <md:SPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
              <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</md:NameIDFormat>
              <md:AssertionConsumerService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://${LoginURLPrefix}.auth.${AWS::Region}.amazoncognito.com/saml2/idpresponse" index="0" isDefault="true"/>
            </md:SPSSODescriptor>
          </md:EntityDescriptor>

        